{"version":3,"sources":["Pages/Сatalog/components/ProductElemet.tsx","Pages/Сatalog/components/CatalogPage.tsx","Pages/Сatalog/index.tsx"],"names":["ProductElement","props","moveToProduct","useActions","src","data","type","thumbnail","to","className","onClick","index","style","backgroundImage","CatalogPage","products","map","element","i","Catalog","useTypedSelector","state","goods","loading","error","fetchGoods","useEffect","JSON","parse","sessionStorage","getItem","alert","Loader","length"],"mappings":"iRAMO,SAASA,EAAeC,GAI7B,IAAQC,EAAkBC,cAAlBD,cACFE,EAA0B,QAApBH,EAAMI,KAAKC,KAAiBL,EAAMI,KAAKE,UAAYN,EAAMI,KAAKD,IAE1E,OACE,mCACE,cAAC,IAAD,CAAMI,GAAG,WAAT,SACE,qBACEC,UAAU,kBACVC,QAAS,kBAAMR,EAAcD,EAAMU,QACnCC,MAAO,CAAEC,gBAAgB,QAAD,OAAUT,EAAV,a,OCdnB,SAASU,EAAYb,GAClC,IAAMc,EAAWd,EAAMI,KAAOJ,EAAMI,KAAO,GAE3C,OACE,mCACE,qBAAKI,UAAU,oBAAf,SACGM,EAASC,KAAI,SAACC,EAASC,GACtB,OAAO,cAAClB,EAAD,CAAgBK,KAAMY,EAASN,MAAK,UAAKO,IAAUA,UCNrD,SAASC,IACtB,MAAkCC,aAAiB,SAACC,GAAD,OAAWA,EAAMC,SAA5DA,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,MAChBC,EAAetB,cAAfsB,WAcR,OAZAC,qBAAU,WACRD,IACmBE,KAAKC,MACtBC,eAAeC,QAAQ,eAAiB,UAGxCC,MACE,oGAGH,IAECR,EACK,cAACS,EAAA,EAAD,IAGLR,EACK,6BAAKA,IAETF,EAAMW,OAKT,mCACE,cAACnB,EAAD,CAAaT,KAAMiB,MALd,6BAAKE","file":"static/js/26.81398f16.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IProduct } from \"../../../globalTypes\";\r\nimport { useActions } from \"../../../Store/hooks/useActions\";\r\nimport \"./ProductElementStyle.scss\";\r\n\r\nexport function ProductElement(props: {\r\n  data: IProduct;\r\n  index: string;\r\n}): JSX.Element {\r\n  const { moveToProduct } = useActions();\r\n  const src = props.data.type === \"vid\" ? props.data.thumbnail : props.data.src;\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/product\">\r\n        <div\r\n          className=\"catalog-element\"\r\n          onClick={() => moveToProduct(props.index)}\r\n          style={{ backgroundImage: `url(\"${src}\")` }}\r\n        ></div>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { IProduct } from \"../../../globalTypes\";\r\nimport { ProductElement } from \"./ProductElemet\";\r\nimport \"./CatalogPageStyle.scss\";\r\n\r\nexport default function CatalogPage(props: { data: IProduct[] }): JSX.Element {\r\n  const products = props.data ? props.data : [];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"catalog-container\">\r\n        {products.map((element, i) => {\r\n          return <ProductElement data={element} index={`${i}`} key={i} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport { useActions } from \"../../Store/hooks/useActions\";\r\nimport { useTypedSelector } from \"../../Store/hooks/useTypedSelector\";\r\nimport CatalogPage from \"./components/CatalogPage\";\r\n\r\nexport default function Catalog(): JSX.Element {\r\n  const { goods, loading, error } = useTypedSelector((state) => state.goods);\r\n  const { fetchGoods } = useActions();\r\n\r\n  useEffect(() => {\r\n    fetchGoods();\r\n    const isVerified = JSON.parse(\r\n      sessionStorage.getItem(\"isVerified\") || \"false\"\r\n    );\r\n    if (!isVerified) {\r\n      alert(\r\n        \"After verification, the order menu will be available to you. Please wait for data verification\"\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n  if (!goods.length) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CatalogPage data={goods} />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}