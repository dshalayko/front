{"version":3,"sources":["API/chatAPI.tsx","Pages/ProductPage/components/ProductCard.tsx","Pages/ProductPage/components/Slider.tsx","Pages/ProductPage/index.tsx"],"names":["sendChatData","chatData","a","$authHost","post","JSON","stringify","data","console","log","ProductCard","props","active","index","activeSlide","history","useHistory","className","type","src","alt","clasname","url","muted","playing","playsinline","loop","width","height","playsInline","price","name","onClick","productName","productPrice","userID","sessionStorage","getItem","open","chatBtn","viewBox","fill","xmlns","d","product","parse","push","alert","Slider","initialSlide","Number","window","useState","activeSlideIndex","setactiveSlideIndex","swiper","activeIndex","clickedIndex","slideNext","slidePrev","onSlideChange","setItem","String","pagination","clickable","renderBullet","navigation","speed","spaceBetween","mousewheel","centeredSlides","breakpoints","slidesPerView","map","el","SwiperCore","use","Pagination","Navigation","Mousewheel","Autoplay","ProductPage","useTypedSelector","state","goods","loading","error","useActions","fetchGoods","setWhiteColor","setVisibleTrue","setVisibleFalse","windSize","innerWidth","innerHeight","getWindowDimensions","useEffect","Loader","length"],"mappings":"oTAQaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,+EAEDC,IAAUC,KAC/B,kBACAC,KAAKC,UAAUL,IAJO,uBAEhBM,EAFgB,EAEhBA,KAFgB,kBAMjBA,GANiB,gCAQxBC,QAAQC,IAAR,MARwB,yDAAH,sD,OCDlB,SAASC,EAAYC,GAIX,IAAD,UACRC,EAASD,EAAME,OAASF,EAAMG,YAC9BC,EAAUC,cAoBhB,OACE,mCACE,sBAAKC,UAAU,cAAf,UACuB,QAApBN,EAAMJ,KAAKW,KACV,qBAAKC,IAAG,UAAER,EAAMJ,YAAR,aAAE,EAAYY,IAAKF,UAAU,kBAAkBG,IAAI,KAE3D,qBAAKH,UAAU,kBAAf,SACGL,EACC,cAAC,IAAD,CACES,SAAS,aACTC,IAAG,UAAEX,EAAMJ,YAAR,aAAE,EAAYY,IACjBI,OAAO,EACPC,SAAO,EACPC,aAAa,EACbC,MAAM,EACNC,MAAM,OACNC,OAAO,OACPC,aAAa,IAGf,cAAC,IAAD,CACER,SAAS,aACTC,IAAG,UAAEX,EAAMJ,YAAR,aAAE,EAAYY,IACjBQ,MAAM,OACNC,OAAO,OACPL,OAAO,EACPM,aAAa,EACbJ,aAAa,MAKrB,sBAAKR,UAAU,mBAAf,UACE,uBAAMA,UAAU,oBAAhB,gBAAsC,UAACN,EAAMJ,YAAP,aAAC,EAAYuB,UACnD,sBAAMb,UAAU,mBAAhB,mBAAoCN,EAAMJ,YAA1C,aAAoC,EAAYwB,OAC/CnB,EACC,sBAAKK,UAAU,mBAAf,UACE,qBAAKA,UAAU,wBAAwBe,QAAS,kBAvD5D,WACE,IAAM/B,EAAW,CACfgC,YAAatB,EAAMJ,KAAKwB,KACxBG,aAAcvB,EAAMJ,KAAKuB,MACzBK,OAAQC,eAAeC,QAAQ,aAAe,IAEhDrC,EAAaC,GACbqC,KAAK,+CAgD2DC,IAAtD,SACE,qBACEZ,MAAM,KACNC,OAAO,KACPY,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAOE,sBACEC,EAAE,qVACFF,KAAK,gBAIX,sBACExB,UAAU,6BACVe,QAAS,kBA9DDY,EA8DoBjC,EAAMJ,UA7D3BF,KAAKwC,MACtBT,eAAeC,QAAQ,eAAiB,SAGtCtB,EAAQ+B,KAAK,YAAaF,GAC1BG,MAAM,6DANZ,IAAsBH,GA4DV,UAIE,qBACEjB,MAAM,KACNC,OAAO,KACPY,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAOE,sBACEC,EAAE,6jCACFF,KAAK,YAGT,oDAGF,a,wFCvFC,SAASO,EAAOrC,GAC7B,IAAMsC,EAAeC,OAAOC,OAAOf,eAAeC,QAAQ,gBAS1D,EAAgDe,mBAASH,GAAzD,mBAAOI,EAAP,KAAyBC,EAAzB,KAEA,OACE,mCACE,cAAC,IAAD,CACEtB,QAAS,SAACuB,GAEJA,EAAOC,YAAcD,EAAOE,cAC9BF,EAAOG,UAAU,KAAM,GAErBH,EAAOC,YAAcD,EAAOE,cAC9BF,EAAOI,UAAU,KAAM,IAG3BC,cAAe,SAACL,GACdD,EAAoBC,EAAOC,aAC3BL,OAAOf,eAAeyB,QACpB,cACAC,OAAOP,EAAOC,eAGlBO,WA5Ba,CACjBC,WAAW,EACXC,aAAc,SAAUpD,EAAeI,GACrC,MAAO,gBAAkBA,EAAlB,cA0BLiD,YAAY,EACZjD,UAAU,WACVkD,MAAO,IACPC,aAAc,GACdnB,aAA6B,EAAfA,EACdoB,YAAY,EAIZC,gBAAgB,EAChBC,YAAa,CACX,KAAM,CACJC,cAAe,GAEjB,KAAM,CACJA,cAAe,EACfJ,aAAc,KAlCpB,SAsCGzD,EAAMJ,KAAKkE,KAAI,SAACC,EAAI7D,GAAL,OACd,cAAC,IAAD,UACE,cAACH,EAAD,CACEH,KAAMmE,EACN7D,MAAOA,EACPC,YAAauC,KAJCqB,EAAG3C,aAvD/B4C,IAAWC,IAAI,CAACC,IAAYC,IAAYC,IAAYC,M,oBCRrC,SAASC,IACtB,MAAkCC,aAAiB,SAACC,GAAD,OAAWA,EAAMC,SAA5DA,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,MACxB,EACEC,cADMC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAAeC,EAAnC,EAAmCA,eAAgBC,EAAnD,EAAmDA,gBAUnD,IAAMC,EAPN,WACE,MAAmDzC,OACnD,MAAO,CACLxB,MAFF,EAAQkE,WAGNjE,OAHF,EAA2BkE,aAMZC,GAQjB,OANAC,qBAAU,WACRR,IACAC,IACAG,EAASjE,OAAS,IAAM+D,IAAmBC,MAC1C,IAECN,EACK,cAACY,EAAA,EAAD,IAGLX,EACK,6BAAKA,IAETF,EAAMc,OAIT,mCACE,cAAClD,EAAD,CAAQzC,KAAM6E,MAJT,6BAAKE","file":"static/js/25.c302d822.chunk.js","sourcesContent":["import { $authHost } from \"./index\";\r\n\r\ntype IChatData = {\r\n  productName: string;\r\n  productPrice: number;\r\n  userID: string;\r\n};\r\n\r\nexport const sendChatData = async (chatData: IChatData): Promise<unknown> => {\r\n  try {\r\n    const { data } = await $authHost.post(\r\n      \"api/chat/create\",\r\n      JSON.stringify(chatData)\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport { IProduct } from \"../../../globalTypes\";\r\nimport \"./ProductCardStyle.scss\";\r\nimport { useHistory } from \"react-router\";\r\nimport { sendChatData } from \"../../../API/chatAPI\";\r\n\r\nexport function ProductCard(props: {\r\n  data: IProduct;\r\n  index: number;\r\n  activeSlide: number;\r\n}): JSX.Element {\r\n  const active = props.index == props.activeSlide;\r\n  const history = useHistory();\r\n\r\n  function chatBtn() {\r\n    const chatData = {\r\n      productName: props.data.name,\r\n      productPrice: props.data.price,\r\n      userID: sessionStorage.getItem(\"userTgID\") || \"\",\r\n    };\r\n    sendChatData(chatData);\r\n    open(\"https://t.me/snaptrap_bot?start=product_msg\");\r\n  }\r\n  function addToCartBtn(product: IProduct) {\r\n    const isVerified = JSON.parse(\r\n      sessionStorage.getItem(\"isVerified\") || \"false\"\r\n    );\r\n    isVerified\r\n      ? history.push(\"/checkout\", product)\r\n      : alert(\"You don't have access. Please wait for data verification\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"productCard\">\r\n        {props.data.type === \"img\" ? (\r\n          <img src={props.data?.src} className=\"productCard-img\" alt=\"\" />\r\n        ) : (\r\n          <div className=\"productCard-vid\">\r\n            {active ? (\r\n              <ReactPlayer\r\n                clasname=\"vid-player\"\r\n                url={props.data?.src}\r\n                muted={true}\r\n                playing\r\n                playsinline={true}\r\n                loop={true}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                playsInline={true}\r\n              />\r\n            ) : (\r\n              <ReactPlayer\r\n                clasname=\"vid-player\"\r\n                url={props.data?.src}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                muted={true}\r\n                playsInline={true}\r\n                playsinline={true}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n        <div className=\"productCard-info\">\r\n          <span className=\"productCard-price\">${+props.data?.price}</span>\r\n          <span className=\"productCard-name\">{props.data?.name}</span>\r\n          {active ? (\r\n            <div className=\"productCard-btns\">\r\n              <div className=\"productCard-btns-chat\" onClick={() => chatBtn()}>\r\n                <svg\r\n                  width=\"20\"\r\n                  height=\"20\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M4.455 16L0 19.5V1C0 0.734784 0.105357 0.48043 0.292893 0.292893C0.48043 0.105357 0.734784 0 1 0H19C19.2652 0 19.5196 0.105357 19.7071 0.292893C19.8946 0.48043 20 0.734784 20 1V15C20 15.2652 19.8946 15.5196 19.7071 15.7071C19.5196 15.8946 19.2652 16 19 16H4.455ZM3.763 14H18V2H2V15.385L3.763 14ZM9 7H11V9H9V7ZM5 7H7V9H5V7ZM13 7H15V9H13V7Z\"\r\n                    fill=\"#4A9B57\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <div\r\n                className=\"productCard-btns-addToCart\"\r\n                onClick={() => addToCartBtn(props.data)}\r\n              >\r\n                <svg\r\n                  width=\"21\"\r\n                  height=\"21\"\r\n                  viewBox=\"0 0 21 21\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M2 14V2H0V0H3C3.26522 0 3.51957 0.105357 3.70711 0.292893C3.89464 0.48043 4 0.734784 4 1V13H16.438L18.438 5H6V3H19.72C19.872 3 20.022 3.03466 20.1586 3.10134C20.2952 3.16801 20.4148 3.26495 20.5083 3.38479C20.6019 3.50462 20.6668 3.6442 20.6983 3.79291C20.7298 3.94162 20.7269 4.09555 20.69 4.243L18.19 14.243C18.1358 14.4592 18.011 14.6512 17.8352 14.7883C17.6595 14.9255 17.4429 15 17.22 15H3C2.73478 15 2.48043 14.8946 2.29289 14.7071C2.10536 14.5196 2 14.2652 2 14ZM4 21C3.46957 21 2.96086 20.7893 2.58579 20.4142C2.21071 20.0391 2 19.5304 2 19C2 18.4696 2.21071 17.9609 2.58579 17.5858C2.96086 17.2107 3.46957 17 4 17C4.53043 17 5.03914 17.2107 5.41421 17.5858C5.78929 17.9609 6 18.4696 6 19C6 19.5304 5.78929 20.0391 5.41421 20.4142C5.03914 20.7893 4.53043 21 4 21ZM16 21C15.4696 21 14.9609 20.7893 14.5858 20.4142C14.2107 20.0391 14 19.5304 14 19C14 18.4696 14.2107 17.9609 14.5858 17.5858C14.9609 17.2107 15.4696 17 16 17C16.5304 17 17.0391 17.2107 17.4142 17.5858C17.7893 17.9609 18 18.4696 18 19C18 19.5304 17.7893 20.0391 17.4142 20.4142C17.0391 20.7893 16.5304 21 16 21Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                </svg>\r\n                <div>ADD TO CART</div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { ProductCard } from \"./ProductCard\";\r\nimport { IProduct } from \"../../../globalTypes\";\r\nimport SwiperCore, {\r\n  Pagination,\r\n  Navigation,\r\n  Mousewheel,\r\n  Autoplay,\r\n} from \"swiper\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"./SliderStyle.scss\";\r\nimport \"swiper/swiper-bundle.min.css\";\r\nimport \"swiper/swiper.min.css\";\r\n\r\nSwiperCore.use([Pagination, Navigation, Mousewheel, Autoplay]);\r\n\r\nexport default function Slider(props: { data: IProduct[] }): JSX.Element {\r\n  const initialSlide = Number(window.sessionStorage.getItem(\"sliderIndex\"));\r\n\r\n  const pagination = {\r\n    clickable: true,\r\n    renderBullet: function (index: number, className: string) {\r\n      return '<span class=\"' + className + '\">' + \"</span>\";\r\n    },\r\n  };\r\n\r\n  const [activeSlideIndex, setactiveSlideIndex] = useState(initialSlide);\r\n\r\n  return (\r\n    <>\r\n      <Swiper\r\n        onClick={(swiper) => {\r\n          // console.log(swiper);\r\n          if (swiper.activeIndex < swiper.clickedIndex) {\r\n            swiper.slideNext(1000, false);\r\n          }\r\n          if (swiper.activeIndex > swiper.clickedIndex) {\r\n            swiper.slidePrev(1000, false);\r\n          }\r\n        }}\r\n        onSlideChange={(swiper) => {\r\n          setactiveSlideIndex(swiper.activeIndex);\r\n          window.sessionStorage.setItem(\r\n            \"sliderIndex\",\r\n            String(swiper.activeIndex)\r\n          );\r\n        }}\r\n        pagination={pagination}\r\n        navigation={true}\r\n        className=\"mySwiper\"\r\n        speed={500}\r\n        spaceBetween={10}\r\n        initialSlide={initialSlide | 0}\r\n        mousewheel={true}\r\n        // autoplay={{\r\n        //   delay: 10000,\r\n        // }}\r\n        centeredSlides={true}\r\n        breakpoints={{\r\n          1025: {\r\n            slidesPerView: 2,\r\n          },\r\n          1200: {\r\n            slidesPerView: 3,\r\n            spaceBetween: 50,\r\n          },\r\n        }}\r\n      >\r\n        {props.data.map((el, index) => (\r\n          <SwiperSlide key={el.name}>\r\n            <ProductCard\r\n              data={el}\r\n              index={index}\r\n              activeSlide={activeSlideIndex}\r\n            />\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useActions } from \"../../Store/hooks/useActions\";\r\nimport Slider from \"./components/Slider\";\r\nimport { useTypedSelector } from \"../../Store/hooks/useTypedSelector\";\r\nimport Loader from \"../../Components/Loader/index\";\r\n\r\nexport default function ProductPage(): JSX.Element {\r\n  const { goods, loading, error } = useTypedSelector((state) => state.goods);\r\n  const { fetchGoods, setWhiteColor, setVisibleTrue, setVisibleFalse } =\r\n    useActions();\r\n\r\n  function getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n      width,\r\n      height,\r\n    };\r\n  }\r\n  const windSize = getWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    fetchGoods();\r\n    setWhiteColor();\r\n    windSize.width >= 780 ? setVisibleTrue() : setVisibleFalse();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n  if (!goods.length) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n  return (\r\n    <>\r\n      <Slider data={goods} />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}