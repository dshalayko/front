{"version":3,"sources":["assets/arrow_back_green.svg","Pages/CartPage/components/CartElemet.tsx","Pages/CartPage/components/CartPage.tsx","Pages/CartPage/index.tsx"],"names":["CartElement","props","useActions","updateCartItemQuantity","clearCartItem","updateOrRemove","quantity","data","openDeleteModal","product","element","document","getElementById","index","style","display","closeDeleteModal","className","type","backgroundImage","thumbnail","src","price","onClick","id","CatalogPage","cartItems","placeAnOrder","history","useHistory","totalPrice","reduce","acummulator","item","goBack","arrow","href","to","length","map","i","alignSelf","width","productListForOrder","forEach","productList","product_id","product_name","name","total_price","push","order","user_ID","sessionStorage","getItem","product_list","swal","text","buttons","timer","Cart","cartProducts","useTypedSelector","state","cart","updateCart","setVisibleTrue","useEffect"],"mappings":"2HAAe,QAA0B,8C,uKCKlC,SAASA,EAAYC,GAExB,MAAkDC,cAA1CC,EAAR,EAAQA,uBAAwBC,EAAhC,EAAgCA,cAEhC,SAASC,EAAeC,GACjBL,EAAMM,KAAKD,SAAWA,GAAY,EACjCE,IAEAL,EAAuBF,EAAMM,KAAKE,QAASH,GAInD,SAASE,IACL,IAAME,EAAUC,SAASC,eAAT,sBAAuCX,EAAMY,QAC1DH,IACCA,EAAQI,MAAMC,QAAU,QAIhC,SAASC,IACL,IAAMN,EAAUC,SAASC,eAAT,sBAAuCX,EAAMY,QAC1DH,IACCA,EAAQI,MAAMC,QAAU,QAShC,OACI,qCACG,sBAAKE,UAAU,eAAf,UACI,sBAAKA,UAAU,oBAAf,UACkC,QAA5BhB,EAAMM,KAAKE,QAAQS,KAChB,qBAAKD,UAAU,kBAAkBH,MAAO,CAACK,gBAAgB,QAAD,OAAUlB,EAAMM,KAAKE,QAAQW,UAA7B,SACxD,qBAAKH,UAAU,kBAAkBH,MAAO,CAACK,gBAAgB,QAAD,OAAUlB,EAAMM,KAAKE,QAAQY,IAA7B,SAE5D,sBAAKJ,UAAU,qBAAf,UACI,sBAAKA,UAAU,sBAAf,cAAuChB,EAAMM,KAAKE,QAAQa,MAAMrB,EAAMM,KAAKD,YAC3E,sBAAKW,UAAU,kBAAf,UAAkChB,EAAMM,KAAKE,QAAQa,MAArD,sBAGR,sBAAKL,UAAU,gBAAf,UACI,wBAAQA,UAAU,uBAAuBM,QAAS,kBAAMlB,GAAgB,IAAxE,oBACA,qBAAKY,UAAU,sBAAf,SAAsChB,EAAMM,KAAKD,WACjD,wBAAQW,UAAU,uBAAuBM,QAAS,kBAAMlB,EAAe,IAAvE,kBAEJ,wBAAQY,UAAU,sBAAsBM,QAASf,OAErD,qBAAKgB,GAAE,sBAAiBvB,EAAMY,OAASI,UAAU,4BAAjD,SACI,sBAAKA,UAAU,oCAAf,UACI,qBAAKA,UAAU,kCAAf,oBACA,qBAAKA,UAAU,iCAAf,oDACA,sBAAKA,UAAU,oCAAf,UACI,wBAAQA,UAAU,mCAAmCM,QAASP,EAA9D,oBACA,wBAAQC,UAAU,mCAAmCM,QA/BzE,WACInB,EAAcH,EAAMM,KAAKE,SACzBO,KA6BgB,+B,sDCpDT,SAASS,EAAYxB,GAClC,IAAMyB,EAAYzB,EAAMM,KAChBoB,EAAiBzB,cAAjByB,aACFC,EAAUC,cACVC,EAAaJ,EAAUK,QAC3B,SAACC,EAAaC,GAAd,OAAuBD,EAAcC,EAAKxB,QAAQa,MAAQW,EAAK3B,WAC/D,GA4BF,OACE,qCACE,qBAAKW,UAAU,aAAf,SACE,wBAAQM,QAASK,EAAQM,OAAzB,SACE,qBAAKb,IAAKc,UAGd,sBAAKlB,UAAU,cAAf,UACE,sBAAKA,UAAU,WAAf,UACE,mBAAGmB,KAAK,WAAR,uBACA,6DACA,cAAC,IAAD,CAAMC,GAAG,QAAT,qBAEF,qBAAKpB,UAAU,aAAf,qBAEF,qBAAKA,UAAU,iBAAf,SACGS,EAAUY,OAAS,EAClB,qCACE,qBAAKrB,UAAU,gBAAf,SACGS,EAAUa,KAAI,SAAC7B,EAAS8B,GACvB,OAAO,cAACxC,EAAD,CAAaO,KAAMG,EAASG,MAAK,UAAK2B,IAAUA,QAG3D,sBAAKvB,UAAU,cAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,mDACA,sBAAKA,UAAU,mBAAf,cAAoCa,QAEtC,qBAAKhB,MAAO,CAAE2B,UAAW,SAAUC,MAAO,OAA1C,SACE,wBAAQzB,UAAU,cAAcM,QAtD9C,WACE,IAAMoB,EAAsC,GAC5CjB,EAAUkB,SAAQ,SAACX,GACjB,IAAMY,EAA4B,CAChCC,WAAW,GAAD,OAAKb,EAAKxB,QAAQe,IAC5BuB,aAAcd,EAAKxB,QAAQuC,KAC3B1C,SAAU2B,EAAK3B,SACf2C,YAAahB,EAAK3B,SAAW2B,EAAKxB,QAAQa,OAE5CqB,EAAoBO,KAAKL,MAE3B,IAAMM,EAAgB,CACpBC,QAASC,eAAeC,QAAQ,YAChCC,aAAcZ,EACdM,YAAanB,GAEfH,EAAawB,GACbK,IAAK,CACHC,KAAM,wCACNC,QAAS,EAAC,GACVC,MAAO,MAET/B,EAAQsB,KAAK,aAgCD,oCAON,sBAAKjC,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,iDAGA,wBAAQA,UAAU,cAAlB,SACE,mBAAGmB,KAAK,WAAR,yCChFC,SAASwB,IACtB,IAAQC,EAAiBC,aAAiB,SAACC,GAAD,OAAWA,EAAMC,QAAnDH,aACR,EAAuC3D,cAA/B+D,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,eAOpB,OALAC,qBAAU,WACRF,IACAC,MACC,IAGD,mCACE,cAAC,EAAD,CAAU3D,KAAMsD","file":"static/js/24.e8bdfd18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrow_back_green.795033f2.svg\";","import React from \"react\";\r\nimport { ICartItem } from \"../../../globalTypes\";\r\nimport { useActions } from \"../../../Store/hooks/useActions\";\r\nimport \"./CartElementStyle.scss\";\r\n\r\nexport function CartElement(props: { data: ICartItem, index: string }): JSX.Element {\r\n\r\n    const { updateCartItemQuantity, clearCartItem } = useActions();\r\n\r\n    function updateOrRemove(quantity: number){\r\n        if(props.data.quantity + quantity == 0){\r\n            openDeleteModal();\r\n        } else {\r\n            updateCartItemQuantity(props.data.product, quantity);\r\n        }\r\n    }\r\n\r\n    function openDeleteModal(){\r\n        const element = document.getElementById(`delete-modal${props.index}`);\r\n        if(element){          \r\n            element.style.display = 'flex';\r\n        }\r\n    }\r\n\r\n    function closeDeleteModal(){\r\n        const element = document.getElementById(`delete-modal${props.index}`);\r\n        if(element){          \r\n            element.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    function removeElement(){\r\n        clearCartItem(props.data.product);\r\n        closeDeleteModal();\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <div className=\"cart-element\">\r\n               <div className=\"cart-element-info\">\r\n                    {props.data.product.type === \"vid\" ? \r\n                        <div className=\"cart-item-image\" style={{backgroundImage: `url(\"${props.data.product.thumbnail}\")` }}></div> :\r\n                        <div className=\"cart-item-image\" style={{backgroundImage: `url(\"${props.data.product.src}\")` }}></div>\r\n                    }\r\n                    <div className=\"cart-element-price\">\r\n                        <div className=\"element-total-price\">${props.data.product.price*props.data.quantity}</div>\r\n                        <div className=\"per-piece-price\">{props.data.product.price} per piece</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"element-count\">\r\n                    <button className=\"element-count-button\" onClick={() => updateOrRemove(-1) }>&ndash;</button>\r\n                    <div className=\"element-total-count\">{props.data.quantity}</div>\r\n                    <button className=\"element-count-button\" onClick={() => updateOrRemove(1) }>+</button>\r\n                </div>\r\n                <button className=\"cart-element-remove\" onClick={openDeleteModal}></button>\r\n            </div>\r\n            <div id={`delete-modal${props.index}`} className=\"cart-element-delete-modal\">\r\n                <div className=\"cart-element-delete-modal-content\">\r\n                    <div className=\"cart-element-delete-modal-title\">Delete</div>\r\n                    <div className=\"cart-element-delete-modal-text\">Do you really want to delete the item?</div>\r\n                    <div className=\"cart-element-delete-modal-buttons\">\r\n                        <button className=\"cart-element-delete-modal-button\" onClick={closeDeleteModal}>Cancel</button>\r\n                        <button className=\"cart-element-delete-modal-button\" onClick={removeElement}>Delete</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\nimport { ICartItem, IOrder, IProductList } from \"../../../globalTypes\";\r\nimport { CartElement } from \"./CartElemet\";\r\nimport \"./CartPageStyle.scss\";\r\nimport arrow from \"../../../assets/arrow_back_green.svg\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useActions } from \"../../../Store/hooks/useActions\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport default function CatalogPage(props: { data: ICartItem[] }): JSX.Element {\r\n  const cartItems = props.data;\r\n  const { placeAnOrder } = useActions();\r\n  const history = useHistory();\r\n  const totalPrice = cartItems.reduce(\r\n    (acummulator, item) => acummulator + item.product.price * item.quantity,\r\n    0\r\n  );\r\n\r\n  function placeOrder() {\r\n    const productListForOrder: IProductList[] = [];\r\n    cartItems.forEach((item) => {\r\n      const productList: IProductList = {\r\n        product_id: `${item.product.id}`,\r\n        product_name: item.product.name,\r\n        quantity: item.quantity,\r\n        total_price: item.quantity * item.product.price,\r\n      };\r\n      productListForOrder.push(productList);\r\n    });\r\n    const order: IOrder = {\r\n      user_ID: sessionStorage.getItem(\"userTgID\") as string,\r\n      product_list: productListForOrder,\r\n      total_price: totalPrice,\r\n    };\r\n    placeAnOrder(order);\r\n    swal({\r\n      text: \"You have successfully placed an order\",\r\n      buttons: [false],\r\n      timer: 2000,\r\n    });\r\n    history.push(\"/product\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cart-arrow\">\r\n        <button onClick={history.goBack}>\r\n          <img src={arrow}></img>\r\n        </button>\r\n      </div>\r\n      <div className=\"cart-header\">\r\n        <div className=\"cart-nav\">\r\n          <a href=\"/product\">Main page</a>\r\n          <span>&nbsp;&nbsp;&nbsp;&gt;&nbsp;&nbsp;&nbsp;</span>\r\n          <Link to=\"/cart\">Cart</Link>\r\n        </div>\r\n        <div className=\"cart-label\">Cart</div>\r\n      </div>\r\n      <div className=\"cart-container\">\r\n        {cartItems.length > 0 ? (\r\n          <>\r\n            <div className=\"cart-elements\">\r\n              {cartItems.map((element, i) => {\r\n                return <CartElement data={element} index={`${i}`} key={i} />;\r\n              })}\r\n            </div>\r\n            <div className=\"total-price\">\r\n              <div className=\"total-price-text\">\r\n                <div>Total price:&nbsp;</div>\r\n                <div className=\"cart-total-price\">${totalPrice}</div>\r\n              </div>\r\n              <div style={{ alignSelf: \"center\", width: \"80%\" }}>\r\n                <button className=\"cart-button\" onClick={placeOrder}>\r\n                  PLACE AN ORDER\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"cart-empty\">\r\n            <div className=\"cart-empty-label\">\r\n              You have not selected a product yet\r\n            </div>\r\n            <button className=\"cart-button\">\r\n              <a href=\"/product\">Go to the catalog</a>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useTypedSelector } from \"../../Store/hooks/useTypedSelector\";\r\nimport CartPage from \"./components/CartPage\";\r\nimport { useActions } from \"../../Store/hooks/useActions\";\r\n\r\nexport default function Cart(): JSX.Element {\r\n  const { cartProducts } = useTypedSelector((state) => state.cart);\r\n  const { updateCart, setVisibleTrue } = useActions();\r\n\r\n  useEffect(() => {\r\n    updateCart();\r\n    setVisibleTrue();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CartPage data={cartProducts} />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}