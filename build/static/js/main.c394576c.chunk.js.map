{"version":3,"sources":["API/goodsAPI.tsx","assets/logo.svg","API/managerAPI.tsx","API/index.tsx","Components/Router/routes.tsx","Components/Navbar/index.tsx","Components/Router/AppRouter.tsx","App.tsx","Store/reducers/AuthReducer.ts","Store/reducers/NavbarReducer.ts","Store/reducers/GoodsReducer.ts","Store/reducers/CartReducer.ts","Store/reducers/NewFileReducer.ts","Store/reducers/CheckoutReducer.ts","Store/reducers/OrdersReducer.ts","Store/reducers/ManagersReducer.ts","Store/reducers/UsersReducer.ts","Store/index.tsx","index.tsx","Store/reducers/type/cart.ts","Store/reducers/type/goods.ts","Store/reducers/type/auth.ts","Store/reducers/type/navbar.ts","Store/reducers/type/order.ts","Store/reducers/type/manager.ts","Store/reducers/type/users.ts","Store/hooks/useTypedSelector.ts","Store/action-creators/goods.ts","Store/action-creators/auth.ts","Store/action-creators/navbar.ts","Store/action-creators/cart.ts","Store/action-creators/newFile.ts","Store/action-creators/orders.ts","Store/action-creators/managers.ts","Store/action-creators/users.ts","Store/action-creators/index.ts","Store/hooks/useActions.ts","API/userAPI.tsx","API/ordersAPI.tsx","Store/reducers/type/newFile.ts","Components/Loader/index.tsx"],"names":["getAllProduct","a","res","goods","$host","get","then","resp","data","status","createNewProduct","formData","$authHost","post","console","log","deleteProduct","id","delete","createNewManager","tel","sendData","telephone_number","deleteNewManager","getAllManagers","axios","create","baseURL","headers","interceptors","request","use","config","authorization","sessionStorage","getItem","ProductPage","React","lazy","publicRoutes","path","Component","authRoutes","Navbar","cartCollor","useTypedSelector","state","navbar","isAdmin","auth","cartProducts","JSON","parse","localStorage","useActions","setIsAdminTrue","setIsAuthFalse","setCleanLocalStorageCart","useState","anchorEl","setAnchorEl","handleClose","open","Boolean","undefined","useEffect","token","jwt_decode","role","cheakAdminRole","className","Button","onClick","event","currentTarget","src","logo","alt","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","to","IconButton","clear","width","height","viewBox","fill","xmlns","d","length","AppRouter","isAuth","setIsAuthTrue","check","verification","alert","fallback","Loader","map","component","exact","App","defaultState","hamburgerColor","isVisible","loading","error","file","quantity","orders","managers","users","rootReducer","combineReducers","action","type","AuthActionType","SET_AUTH_TRUE","SET_AUTH_FALSE","SET_ADMIN_TRUE","SET_ADMIN_FALSE","NavbarActionTypes","SET_WHITE_COLOR","SET_GREEN_COLOR","SET_VISIBLE_TRUE","SET_VISIBLE_FALSE","GoodsActionTypes","FETCH_GOODS","FETCH_GOODS_SUCCESS","payload","FETCH_GOODS_ERROR","GO_TO_PRODUCT","cart","CartActionTypes","UPDATE_CART","historyProducts","UPDATE_CART_ITEM","products","index","findIndex","item","product","name","push","setItem","stringify","UPDATE_CART_ITEM_QUANTITY","splice","CLEAR_CART_ITEM","productToRemove","CLEAN_LOCAL_STORAGE_CART","lastClean","lastCleanDate","Date","now","getTime","removeItem","cleanDate","PLACE_AN_ORDER","placeOrder","order","newFile","NewFileActionTypes","SET_NEW_FILE","checkout","OrdersActionTypes","FETCH_ORDERS","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_ERROR","ManagersActionTypes","FETCH_MANAGERS","FETCH_MANAGERS_SUCCESS","FETCH_MANAGERS_ERROR","UsersActionTypes","FETCH_USERS","FETCH_USERS_SUCCESS","FETCH_USERS_ERROR","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","useSelector","fetchGoods","dispatch","response","moveToProduct","window","setIsAdminFalse","setWhiteColor","setGreenColor","setVisibleTrue","setVisibleFalse","updateCart","updateCartItem","updateCartItemQuantity","clearCartItem","placeAnOrder","setNewFile","fetchOrders","getOrders","fetchManagers","fetchUsers","getUnverifiedUsers","GoodsActionCreators","AuthsActionCreators","NavbarActionCreators","CartActionCreators","NewFileActionCreators","OrdersActionCreators","ManagersActionCreators","UsersActionCreators","useDispatch","bindActionCreators","ActionsCreators","registration","userTgID","login","phone","password","tempRes","telegram_user_id","checkLogin","phoneNumber","verificateUser","deleteUser","deleteOrder","LoaderElement","color"],"mappings":"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","file":"static/js/main.c394576c.chunk.js","sourcesContent":["import { $authHost, $host } from \"./index\";\r\nimport { IData } from \"../globalTypes\";\r\n\r\nexport const getAllProduct = async (): Promise<IData> => {\r\n  let res: IData = { goods: [] };\r\n  await $host.get(`api/goods/all`).then((resp) => {\r\n    if (resp.data.status) {\r\n      return res;\r\n    }\r\n    res = resp.data;\r\n  });\r\n  return res;\r\n};\r\n\r\nexport const createNewProduct = async (formData: unknown): Promise<unknown> => {\r\n  try {\r\n    const { data } = await $authHost.post(\"api/goods\", formData);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (id: number): Promise<unknown> => {\r\n  try {\r\n    const { data } = await $authHost.delete(`api/goods/${id}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.42cd2cae.svg\";","import { $authHost } from \"./index\";\r\nimport { IManager } from \"../globalTypes\";\r\n\r\nexport const createNewManager = async (tel: string): Promise<unknown> => {\r\n  const sendData = { telephone_number: tel };\r\n  try {\r\n    const { data } = await $authHost.post(\"api/manager/create\", sendData);\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteNewManager = async (tel: string): Promise<unknown> => {\r\n  const sendData = { telephone_number: tel };\r\n  try {\r\n    const { data } = await $authHost.post(\"api/manager/delete\", sendData);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getAllManagers = async (): Promise<IManager[]> => {\r\n  let res: IManager[] = [];\r\n  await $authHost.get(\"api/manager/all\").then((resp) => {\r\n    if (resp.data.status) {\r\n      return res;\r\n    }\r\n    res = resp.data;\r\n  });\r\n  return res;\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst $host = axios.create({\r\n  // baseURL: \"http://localhost:8080/\",\r\n  baseURL: \"https://api.snaptrap.online/\",\r\n  // process.env.REACT_APP_API_URL,\r\n  headers: { \"content-type\": \"application/json\" },\r\n});\r\n\r\nconst $authHost = axios.create({\r\n  // baseURL: \"http://localhost:8080/\",\r\n  baseURL: \"https://api.snaptrap.online/\",\r\n  // process.env.REACT_APP_API_URL,\r\n  headers: { \"content-type\": \"application/json\" },\r\n});\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst authInterceptor = (config: any) => {\r\n  config.headers.authorization = `Bearer ${sessionStorage.getItem(\"token\")}`;\r\n  return config;\r\n};\r\n\r\n$authHost.interceptors.request.use(authInterceptor);\r\n\r\nexport { $host, $authHost };\r\n","import React from \"react\";\r\n// import ProductPage from \"../../Pages/ProductPage\";\r\n// import AuthPage from \"../../Pages/AuthPage\";\r\n// import CartPage from \"../../Pages/CartPage\";\r\n// import CheckoutProduct from \"../../Pages/CheckoutProduct\";\r\n// import Catalog from \"../../Pages/Сatalog\";\r\n// import AdminPage from \"../../Pages/AdminPage\";\r\n\r\nconst ProductPage = React.lazy(() => import(\"../../Pages/ProductPage/index\"));\r\nconst AuthPage = React.lazy(() => import(\"../../Pages/AuthPage/index\"));\r\nconst CartPage = React.lazy(() => import(\"../../Pages/CartPage/index\"));\r\nconst CheckoutProduct = React.lazy(\r\n  () => import(\"../../Pages/CheckoutProduct/index\")\r\n);\r\nconst Catalog = React.lazy(() => import(\"../../Pages/Сatalog/index\"));\r\nconst AdminPage = React.lazy(() => import(\"../../Pages/AdminPage/index\"));\r\n\r\ninterface IRoute {\r\n  path: string;\r\n  Component: React.LazyExoticComponent<() => JSX.Element>;\r\n}\r\n\r\nexport const publicRoutes: IRoute[] = [\r\n  {\r\n    path: \"/\",\r\n    Component: AuthPage,\r\n  },\r\n];\r\n\r\nexport const authRoutes: IRoute[] = [\r\n  {\r\n    path: \"/product\",\r\n    Component: ProductPage,\r\n  },\r\n  {\r\n    path: \"/cart\",\r\n    Component: CartPage,\r\n  },\r\n  {\r\n    path: \"/checkout\",\r\n    Component: CheckoutProduct,\r\n  },\r\n  {\r\n    path: \"/catalog\",\r\n    Component: Catalog,\r\n  },\r\n  {\r\n    path: \"/admin\",\r\n    Component: AdminPage,\r\n  },\r\n];\r\n","import React, { useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.scss\";\r\nimport { useTypedSelector } from \"../../Store/hooks/useTypedSelector\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport { ICartItem, IToken } from \"../../globalTypes\";\r\nimport { useActions } from \"../../Store/hooks/useActions\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport LogoutRoundedIcon from \"@mui/icons-material/LogoutRounded\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nexport default function Navbar(): JSX.Element {\r\n  const { cartCollor } = useTypedSelector((state) => state.navbar);\r\n  const { isAdmin } = useTypedSelector((state) => state.auth);\r\n  const cartProducts =\r\n    (JSON.parse(\r\n      localStorage.getItem(\"cartProducts\") as string\r\n    ) as ICartItem[]) || null;\r\n    \r\n  const { setIsAdminTrue, setIsAuthFalse, setCleanLocalStorageCart } = useActions();\r\n  const cheakAdminRole = () => {\r\n    const token = (sessionStorage.getItem(\"token\") as string) || null;\r\n    if (token) {\r\n      const decodeToken = jwt_decode(token) as IToken;\r\n      if (decodeToken.role == \"ADMIN\") {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n    null\r\n  );\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    setIsAuthFalse();\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  useEffect(() => {\r\n    cheakAdminRole() ? setIsAdminTrue() : null;\r\n    setCleanLocalStorageCart();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"navbar\">\r\n        <Button aria-describedby={id} onClick={handleClick}>\r\n          <img src={logo} alt=\"logo\" />\r\n        </Button>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"center\",\r\n            horizontal: \"left\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"center\",\r\n            horizontal: \"left\",\r\n          }}\r\n        >\r\n          <div className=\"navbar-popover\" onClick={handleClose}>\r\n            <Link to=\"/catalog\" className=\"navbar-popover-link\">\r\n              Catalog\r\n            </Link>\r\n            <Link to=\"/cart\" className=\"navbar-popover-link\">\r\n              Cart\r\n            </Link>\r\n            {isAdmin ? (\r\n              <Link className=\"navbar-popover-link\" to=\"/admin\">\r\n                Admin Page\r\n              </Link>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <IconButton aria-label=\"delete\" onClick={() => logOut()}>\r\n              <LogoutRoundedIcon />\r\n              Log Out\r\n            </IconButton>\r\n          </div>\r\n        </Popover>\r\n\r\n        <div className=\"addToCart\">\r\n          <Link to=\"/cart\">\r\n            <svg\r\n              width=\"40\"\r\n              height=\"40\"\r\n              viewBox=\"0 0 21 21\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M2 14V2H0V0H3C3.26522 0 3.51957 0.105357 3.70711 0.292893C3.89464 0.48043 4 0.734784 4 1V13H16.438L18.438 5H6V3H19.72C19.872 3 20.022 3.03466 20.1586 3.10134C20.2952 3.16801 20.4148 3.26495 20.5083 3.38479C20.6019 3.50462 20.6668 3.6442 20.6983 3.79291C20.7298 3.94162 20.7269 4.09555 20.69 4.243L18.19 14.243C18.1358 14.4592 18.011 14.6512 17.8352 14.7883C17.6595 14.9255 17.4429 15 17.22 15H3C2.73478 15 2.48043 14.8946 2.29289 14.7071C2.10536 14.5196 2 14.2652 2 14ZM4 21C3.46957 21 2.96086 20.7893 2.58579 20.4142C2.21071 20.0391 2 19.5304 2 19C2 18.4696 2.21071 17.9609 2.58579 17.5858C2.96086 17.2107 3.46957 17 4 17C4.53043 17 5.03914 17.2107 5.41421 17.5858C5.78929 17.9609 6 18.4696 6 19C6 19.5304 5.78929 20.0391 5.41421 20.4142C5.03914 20.7893 4.53043 21 4 21ZM16 21C15.4696 21 14.9609 20.7893 14.5858 20.4142C14.2107 20.0391 14 19.5304 14 19C14 18.4696 14.2107 17.9609 14.5858 17.5858C14.9609 17.2107 15.4696 17 16 17C16.5304 17 17.0391 17.2107 17.4142 17.5858C17.7893 17.9609 18 18.4696 18 19C18 19.5304 17.7893 20.0391 17.4142 20.4142C17.0391 20.7893 16.5304 21 16 21Z\"\r\n                fill={cartCollor}\r\n              />\r\n            </svg>\r\n          </Link>\r\n          {cartProducts && cartProducts.length > 0 ? (\r\n            <div className=\"cart-size\">{cartProducts.length}</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, Suspense } from \"react\";\r\nimport { Route, Switch, Redirect, BrowserRouter } from \"react-router-dom\";\r\nimport { authRoutes, publicRoutes } from \"./routes\";\r\nimport Navbar from \"../Navbar\";\r\nimport { useTypedSelector } from \"../../Store/hooks/useTypedSelector\";\r\nimport { useActions } from \"../../Store/hooks/useActions\";\r\nimport { check } from \"../../API/userAPI\";\r\nimport Loader from \"../Loader\";\r\n\r\nconst AppRouter = (): JSX.Element => {\r\n  const { isAuth } = useTypedSelector((state) => state.auth);\r\n  const { setIsAuthTrue } = useActions();\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    check().then((res: any) => {\r\n      res.verification\r\n        ? setIsAuthTrue()\r\n        : alert(\"Please wait for data verification\");\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      {isAuth && <Navbar />}\r\n      <Suspense fallback={<Loader />}>\r\n        <section>\r\n          <Switch>\r\n            {!isAuth &&\r\n              publicRoutes.map(({ path, Component }) => (\r\n                <Route key={path} path={path} component={Component} exact />\r\n              ))}\r\n\r\n            {isAuth &&\r\n              authRoutes.map(({ path, Component }) => (\r\n                <Route key={path} path={path} component={Component} exact />\r\n              ))}\r\n            {isAuth ? <Redirect to=\"/catalog\" /> : <Redirect to=\"/\" />}\r\n          </Switch>\r\n        </section>\r\n      </Suspense>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\n\r\nimport AppRouter from \"./Components/Router/AppRouter\";\r\n\r\nfunction App(): JSX.Element {\r\n  return <AppRouter />;\r\n}\r\n\r\nexport default App;\r\n","import { AuthActionType, IAuthState, AuthActions } from \"./type/auth\";\r\nconst defaultState: IAuthState = {\r\n  isAuth: false,\r\n  isAdmin: false,\r\n};\r\n\r\nexport default function authReducer(\r\n  state = defaultState,\r\n  action: AuthActions\r\n): IAuthState {\r\n  switch (action.type) {\r\n    case AuthActionType.SET_AUTH_TRUE: {\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n      };\r\n    }\r\n    case AuthActionType.SET_AUTH_FALSE:\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n      };\r\n    case AuthActionType.SET_ADMIN_TRUE:\r\n      return {\r\n        ...state,\r\n        isAdmin: true,\r\n      };\r\n    case AuthActionType.SET_ADMIN_FALSE:\r\n      return {\r\n        ...state,\r\n        isAdmin: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { INavState, NavbarActionTypes, NavbarActions } from \"./type/navbar\";\r\nconst defaultState: INavState = {\r\n  cartCollor: \"white\",\r\n  hamburgerColor: \"#4A9B57\",\r\n  isVisible: true,\r\n};\r\n\r\nexport default function navbarReducer(\r\n  state = defaultState,\r\n  action: NavbarActions\r\n): INavState {\r\n  switch (action.type) {\r\n    case NavbarActionTypes.SET_WHITE_COLOR:\r\n      return {\r\n        ...state,\r\n        cartCollor: \"white\",\r\n        hamburgerColor: \"#4A9B57\",\r\n      };\r\n    case NavbarActionTypes.SET_GREEN_COLOR:\r\n      return {\r\n        ...state,\r\n        cartCollor: \"#4A9B57\",\r\n        hamburgerColor: \"#4A9B57\",\r\n      };\r\n\r\n    case NavbarActionTypes.SET_VISIBLE_TRUE:\r\n      return {\r\n        ...state,\r\n        isVisible: true,\r\n      };\r\n    case NavbarActionTypes.SET_VISIBLE_FALSE:\r\n      return {\r\n        ...state,\r\n        isVisible: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { IGoodsState, GoodsActionTypes, GoodsAction } from \"./type/goods\";\r\n// import { IProduct } from \"../../globalTypes\";\r\n\r\nconst defaultState: IGoodsState = {\r\n  goods: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default function goodsReducer(\r\n  state = defaultState,\r\n  action: GoodsAction\r\n): IGoodsState {\r\n  switch (action.type) {\r\n    case GoodsActionTypes.FETCH_GOODS:\r\n      return { loading: true, error: null, goods: [] };\r\n    case GoodsActionTypes.FETCH_GOODS_SUCCESS:\r\n      return { loading: false, error: null, goods: action.payload };\r\n    case GoodsActionTypes.FETCH_GOODS_ERROR:\r\n      return { loading: false, error: action.payload, goods: [] };\r\n    case GoodsActionTypes.GO_TO_PRODUCT:\r\n      return { loading: false, error: null, goods: state.goods };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ICartItem } from \"../../globalTypes\";\r\nimport { ICartState, CartActionTypes, CartAction } from \"./type/cart\";\r\nimport { placeOrder } from \"../../API/ordersAPI\";\r\n\r\nconst defaultState: ICartState = {\r\n  cartProducts: [],\r\n};\r\n\r\nexport default function cartReducer(\r\n  state = defaultState,\r\n  action: CartAction\r\n): ICartState {\r\n  switch (action.type) {\r\n    case CartActionTypes.UPDATE_CART: {\r\n      let historyProducts = JSON.parse(localStorage.getItem(\"cartProducts\") as string) as ICartItem[];\r\n      if(!historyProducts){\r\n        historyProducts = [];\r\n      }\r\n      state.cartProducts = historyProducts;\r\n      return { ...state };\r\n    }\r\n    case CartActionTypes.UPDATE_CART_ITEM: {\r\n      const products = state.cartProducts;\r\n      const index = products.findIndex(item => item.product.name == action.product.name);\r\n      if(index !== -1){\r\n        const item = products[index];\r\n        ++item.quantity;\r\n      } else {\r\n        products.push({\r\n          product: action.product,\r\n          quantity: 1,\r\n        });\r\n      }\r\n      localStorage.setItem(\"cartProducts\", JSON.stringify(products));\r\n      return { cartProducts: products };\r\n    }\r\n    case CartActionTypes.UPDATE_CART_ITEM_QUANTITY: {\r\n      const historyProducts = JSON.parse(localStorage.getItem(\"cartProducts\") as string) as ICartItem[];\r\n      const products = historyProducts ? historyProducts : [];\r\n      const index = products.findIndex(\r\n        (item) => item.product.name == action.product.name\r\n      );\r\n      if (index !== -1) {\r\n        const item = products[index];\r\n        item.quantity += action.quantity;\r\n        if (item.quantity <= 0) {\r\n          products.splice(index, index+1);\r\n        }\r\n      } else {\r\n        products.push({\r\n          product: action.product,\r\n          quantity: action.quantity\r\n        });\r\n      }\r\n      localStorage.setItem(\"cartProducts\", JSON.stringify(products));\r\n      state.cartProducts = products;\r\n      return { ...state };\r\n    }\r\n    case CartActionTypes.CLEAR_CART_ITEM:{\r\n      const products = state.cartProducts;\r\n      const productToRemove = action.product.name;\r\n      const index = products.findIndex(item => item.product.name == productToRemove);\r\n      if(index !== -1){\r\n        products.splice(index, index+1);\r\n      }\r\n      localStorage.setItem(\"cartProducts\", JSON.stringify(products));\r\n      return { cartProducts: products };\r\n    }\r\n    case CartActionTypes.CLEAN_LOCAL_STORAGE_CART: {\r\n      const lastClean = JSON.parse(localStorage.getItem(\"lastClean\") as string) as number;\r\n      if(lastClean){\r\n        const lastCleanDate = new Date(lastClean);\r\n        const now = new Date();\r\n        if(now.getTime() - lastCleanDate.getTime() >= 24*60*60*1000){\r\n          localStorage.removeItem(\"cartProducts\");\r\n          localStorage.setItem(\"lastClean\", JSON.stringify(now.getTime()));\r\n        }\r\n      } else {\r\n        const cleanDate = new Date();\r\n        localStorage.setItem(\"lastClean\", JSON.stringify(cleanDate.getTime()));\r\n      }\r\n      return {...state};\r\n    }\r\n    case CartActionTypes.PLACE_AN_ORDER: {\r\n      placeOrder(action.order);\r\n      localStorage.removeItem(\"cartProducts\");\r\n      return {...state};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  NewFileState,\r\n  NewFileActionTypes,\r\n  SetNewFileAction,\r\n} from \"./type/newFile\";\r\n\r\nconst defaultState: NewFileState = {\r\n  file: \"\",\r\n};\r\n\r\nexport default function newFileReducer(\r\n  state = defaultState,\r\n  action: SetNewFileAction\r\n): NewFileState {\r\n  switch (action.type) {\r\n    case NewFileActionTypes.SET_NEW_FILE:\r\n      return {\r\n        ...state,\r\n        file: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ICheckoutState } from \"./type/checkout\";\r\n\r\nconst defaultState: ICheckoutState = {\r\n  quantity: 0,\r\n};\r\n\r\nexport default function checkoutReducer(\r\n  state = defaultState,\r\n): ICheckoutState {\r\n  return state;\r\n}\r\n\r\n","import { IOrdersState, OrdersActionTypes, OrdersAction } from \"./type/order\";\r\n\r\nconst defaultState: IOrdersState = {\r\n  orders: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default function ordersReducer(\r\n  state = defaultState,\r\n  action: OrdersAction\r\n): IOrdersState {\r\n  switch (action.type) {\r\n    case OrdersActionTypes.FETCH_ORDERS:\r\n      return { loading: true, error: null, orders: [] };\r\n    case OrdersActionTypes.FETCH_ORDERS_SUCCESS:\r\n      return { loading: false, error: null, orders: action.payload };\r\n    case OrdersActionTypes.FETCH_ORDERS_ERROR:\r\n      return { loading: false, error: action.payload, orders: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  IManagersState,\r\n  ManagersActionTypes,\r\n  ManagersAction,\r\n} from \"./type/manager\";\r\n\r\nconst defaultState: IManagersState = {\r\n  managers: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default function managersReducer(\r\n  state = defaultState,\r\n  action: ManagersAction\r\n): IManagersState {\r\n  switch (action.type) {\r\n    case ManagersActionTypes.FETCH_MANAGERS:\r\n      return { loading: true, error: null, managers: [] };\r\n    case ManagersActionTypes.FETCH_MANAGERS_SUCCESS:\r\n      return { loading: false, error: null, managers: action.payload };\r\n    case ManagersActionTypes.FETCH_MANAGERS_ERROR:\r\n      return { loading: false, error: action.payload, managers: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { IUsersState, UsersActionTypes, UsersAction } from \"./type/users\";\r\n\r\nconst defaultState: IUsersState = {\r\n  users: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default function goodsReducer(\r\n  state = defaultState,\r\n  action: UsersAction\r\n): IUsersState {\r\n  switch (action.type) {\r\n    case UsersActionTypes.FETCH_USERS:\r\n      return { loading: true, error: null, users: [] };\r\n    case UsersActionTypes.FETCH_USERS_SUCCESS:\r\n      return { loading: false, error: null, users: action.payload };\r\n    case UsersActionTypes.FETCH_USERS_ERROR:\r\n      return { loading: false, error: action.payload, users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport authReducer from \"./reducers/AuthReducer\";\r\nimport navbarReducer from \"./reducers/NavbarReducer\";\r\nimport goodsReducer from \"./reducers/GoodsReducer\";\r\nimport cartReducer from \"./reducers/CartReducer\";\r\nimport newFileReducer from \"./reducers/NewFileReducer\";\r\nimport checkoutReduser from \"./reducers/CheckoutReducer\";\r\nimport ordersReducer from \"./reducers/OrdersReducer\";\r\nimport managersReducer from \"./reducers/ManagersReducer\";\r\nimport usersReducer from \"./reducers/UsersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  navbar: navbarReducer,\r\n  goods: goodsReducer,\r\n  cart: cartReducer,\r\n  newFile: newFileReducer,\r\n  checkout: checkoutReduser,\r\n  orders: ordersReducer,\r\n  managers: managersReducer,\r\n  users: usersReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./Store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { ICartItem, IOrder, IProduct } from \"../../../globalTypes\";\r\n\r\nexport interface ICartState {\r\n  cartProducts: ICartItem[];\r\n}\r\n\r\nexport enum CartActionTypes {\r\n  UPDATE_CART = \"UPDATE_CART\",\r\n  UPDATE_CART_ITEM = \"UPDATE_CART_ITEM\",\r\n  UPDATE_CART_ITEM_QUANTITY = \"UPDATE_CART_ITEM_QUANTITY\",\r\n  CLEAR_CART_ITEM = \"CLEAR_CART\",\r\n  CLEAN_LOCAL_STORAGE_CART = \"CLEAN_LOCAL_STORAGE_CART\",\r\n  PLACE_AN_ORDER = \"PLACE_AN_ORDER\",\r\n}\r\n\r\ninterface IUpdateCart {\r\n  type: CartActionTypes.UPDATE_CART;\r\n}\r\n\r\ninterface IUpdateCartItemAction {\r\n  type: CartActionTypes.UPDATE_CART_ITEM;\r\n  product: IProduct\r\n}\r\n\r\ninterface IUpdateCartItemQuantityAction {\r\n  type: CartActionTypes.UPDATE_CART_ITEM_QUANTITY;\r\n  product: IProduct\r\n  quantity: number\r\n}\r\n\r\ninterface IClearCartAction {\r\n  type: CartActionTypes.CLEAR_CART_ITEM;\r\n  product: IProduct\r\n}\r\n\r\ninterface ICleanLocalStorageCart {\r\n  type: CartActionTypes.CLEAN_LOCAL_STORAGE_CART;\r\n}\r\n\r\ninterface IPlaceAnOrder {\r\n  type: CartActionTypes.PLACE_AN_ORDER;\r\n  order: IOrder\r\n}\r\n\r\nexport type CartAction =\r\n  | IUpdateCart\r\n  | IUpdateCartItemAction\r\n  | IUpdateCartItemQuantityAction\r\n  | IClearCartAction\r\n  | ICleanLocalStorageCart\r\n  | IPlaceAnOrder;\r\n","import { IProduct } from \"../../../globalTypes\";\r\n\r\nexport interface IGoodsState {\r\n  goods: IProduct[];\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\nexport enum GoodsActionTypes {\r\n  FETCH_GOODS = \"FETCH_GOODS\",\r\n  FETCH_GOODS_SUCCESS = \"FETCH_GOODS_SUCCESS\",\r\n  FETCH_GOODS_ERROR = \"FETCH_GOODS_ERROR\",\r\n  GO_TO_PRODUCT = \"GO_TO_PRODUCT\",\r\n}\r\n\r\ninterface IFetchGoodsAction {\r\n  type: GoodsActionTypes.FETCH_GOODS;\r\n}\r\ninterface IFetchGoodsSuccessAction {\r\n  type: GoodsActionTypes.FETCH_GOODS_SUCCESS;\r\n  payload: IProduct[];\r\n}\r\ninterface IFetchGoodsErrorAction {\r\n  type: GoodsActionTypes.FETCH_GOODS_ERROR;\r\n  payload: string;\r\n}\r\ninterface IMoveToProductAction {\r\n  type: GoodsActionTypes.GO_TO_PRODUCT;\r\n}\r\n\r\nexport type GoodsAction =\r\n  | IFetchGoodsAction\r\n  | IFetchGoodsSuccessAction\r\n  | IFetchGoodsErrorAction\r\n  | IMoveToProductAction;\r\n","export enum AuthActionType {\r\n  SET_AUTH_TRUE = \"SET_AUTH_TRUE\",\r\n  SET_AUTH_FALSE = \"SET_AUTH_FALSE\",\r\n  SET_ADMIN_TRUE = \"SET_ADMIN_TRUE\",\r\n  SET_ADMIN_FALSE = \"SET_ADMIN_FALSE\",\r\n}\r\nexport interface IAuthState {\r\n  isAuth: boolean;\r\n  isAdmin: boolean;\r\n}\r\n\r\ninterface setIsAuth {\r\n  type: AuthActionType;\r\n}\r\n\r\nexport type AuthActions = setIsAuth;\r\n","export interface INavState {\r\n  cartCollor: string;\r\n  hamburgerColor: string;\r\n  isVisible: boolean;\r\n}\r\n\r\ninterface SetNavbarColor {\r\n  type: string;\r\n}\r\n\r\nexport enum NavbarActionTypes {\r\n  SET_WHITE_COLOR = \"SET_WHITE_COLOR\",\r\n  SET_GREEN_COLOR = \"SET_GREEN_COLOR\",\r\n  SET_VISIBLE_TRUE = \"SET_VISIBLE_TRUE\",\r\n  SET_VISIBLE_FALSE = \"SET_VISIBLE_FALSE\",\r\n}\r\n\r\nexport type NavbarActions = SetNavbarColor;\r\n","import { IOrders } from \"../../../globalTypes\";\r\n\r\nexport interface IOrdersState {\r\n  orders: IOrders[];\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\nexport enum OrdersActionTypes {\r\n  FETCH_ORDERS = \"FETCH_ORDERS\",\r\n  FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\",\r\n  FETCH_ORDERS_ERROR = \"FETCH_ORDERS_ERROR\",\r\n}\r\n\r\ninterface IFetchOrdersAction {\r\n  type: OrdersActionTypes.FETCH_ORDERS;\r\n}\r\ninterface IFetchOrdersSuccessAction {\r\n  type: OrdersActionTypes.FETCH_ORDERS_SUCCESS;\r\n  payload: IOrders[];\r\n}\r\ninterface IFetchOrdersErrorAction {\r\n  type: OrdersActionTypes.FETCH_ORDERS_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type OrdersAction =\r\n  | IFetchOrdersAction\r\n  | IFetchOrdersSuccessAction\r\n  | IFetchOrdersErrorAction;\r\n","import { IManager } from \"../../../globalTypes\";\r\n\r\nexport interface IManagersState {\r\n  managers: IManager[];\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\nexport enum ManagersActionTypes {\r\n  FETCH_MANAGERS = \"FETCH_MANAGERS\",\r\n  FETCH_MANAGERS_SUCCESS = \"FETCH_MANAGERS_SUCCESS\",\r\n  FETCH_MANAGERS_ERROR = \"FETCH_MANAGERS_ERROR\",\r\n}\r\n\r\ninterface IFetchManagersAction {\r\n  type: ManagersActionTypes.FETCH_MANAGERS;\r\n}\r\ninterface IFetchManagersSuccessAction {\r\n  type: ManagersActionTypes.FETCH_MANAGERS_SUCCESS;\r\n  payload: IManager[];\r\n}\r\ninterface IFetchManagersErrorAction {\r\n  type: ManagersActionTypes.FETCH_MANAGERS_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type ManagersAction =\r\n  | IFetchManagersAction\r\n  | IFetchManagersSuccessAction\r\n  | IFetchManagersErrorAction;\r\n","import { IUser } from \"../../../globalTypes\";\r\n\r\nexport interface IUsersState {\r\n  users: IUser[];\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\nexport enum UsersActionTypes {\r\n  FETCH_USERS = \"FETCH_USERS\",\r\n  FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\",\r\n  FETCH_USERS_ERROR = \"FETCH_USERS_ERROR\",\r\n}\r\n\r\ninterface IFetchUsersAction {\r\n  type: UsersActionTypes.FETCH_USERS;\r\n}\r\ninterface IFetchUsersSuccessAction {\r\n  type: UsersActionTypes.FETCH_USERS_SUCCESS;\r\n  payload: IUser[];\r\n}\r\ninterface IFetchUsersErrorAction {\r\n  type: UsersActionTypes.FETCH_USERS_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type UsersAction =\r\n  | IFetchUsersAction\r\n  | IFetchUsersSuccessAction\r\n  | IFetchUsersErrorAction;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../index\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { Dispatch } from \"redux\";\r\nimport { GoodsAction, GoodsActionTypes } from \"../reducers/type/goods\";\r\nimport { getAllProduct } from \"../../API/goodsAPI\";\r\n\r\nexport const fetchGoods = () => {\r\n  return async (dispatch: Dispatch<GoodsAction>): Promise<void> => {\r\n    try {\r\n      dispatch({ type: GoodsActionTypes.FETCH_GOODS });\r\n      const response = await getAllProduct();\r\n      dispatch({\r\n        type: GoodsActionTypes.FETCH_GOODS_SUCCESS,\r\n        payload: response.goods,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GoodsActionTypes.FETCH_GOODS_ERROR,\r\n        payload: \"An error occurred while loading data.\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const moveToProduct = (index: string) => {\r\n  return (dispatch: Dispatch<GoodsAction>): void => {\r\n    window.sessionStorage.setItem(\"sliderIndex\", index);\r\n    dispatch({\r\n      type: GoodsActionTypes.GO_TO_PRODUCT,\r\n    });\r\n  };\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { AuthActions, AuthActionType } from \"../reducers/type/auth\";\r\n\r\nexport const setIsAuthTrue = () => {\r\n  return (dispatch: Dispatch<AuthActions>): void => {\r\n    dispatch({\r\n      type: AuthActionType.SET_AUTH_TRUE,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setIsAuthFalse = () => {\r\n  return (dispatch: Dispatch<AuthActions>): void => {\r\n    dispatch({\r\n      type: AuthActionType.SET_AUTH_FALSE,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setIsAdminFalse = () => {\r\n  return (dispatch: Dispatch<AuthActions>): void => {\r\n    dispatch({\r\n      type: AuthActionType.SET_ADMIN_FALSE,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setIsAdminTrue = () => {\r\n  return (dispatch: Dispatch<AuthActions>): void => {\r\n    dispatch({\r\n      type: AuthActionType.SET_ADMIN_TRUE,\r\n    });\r\n  };\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { NavbarActions, NavbarActionTypes } from \"../reducers/type/navbar\";\r\n\r\nexport const setWhiteColor = () => {\r\n  return (dispatch: Dispatch<NavbarActions>): void => {\r\n    dispatch({\r\n      type: NavbarActionTypes.SET_WHITE_COLOR,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setGreenColor = () => {\r\n  return (dispatch: Dispatch<NavbarActions>): void => {\r\n    dispatch({\r\n      type: NavbarActionTypes.SET_GREEN_COLOR,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setVisibleTrue = () => {\r\n  return (dispatch: Dispatch<NavbarActions>): void => {\r\n    dispatch({\r\n      type: NavbarActionTypes.SET_VISIBLE_TRUE,\r\n    });\r\n  };\r\n};\r\nexport const setVisibleFalse = () => {\r\n  return (dispatch: Dispatch<NavbarActions>): void => {\r\n    dispatch({\r\n      type: NavbarActionTypes.SET_VISIBLE_FALSE,\r\n    });\r\n  };\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { IOrder, IProduct } from \"../../globalTypes\";\r\nimport { CartAction, CartActionTypes } from \"../reducers/type/cart\";\r\n\r\nexport const updateCart = () => {\r\n  return (dispatch: Dispatch<CartAction>): void => {\r\n    dispatch({\r\n      type: CartActionTypes.UPDATE_CART\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateCartItem = (product: IProduct) => {\r\n  return (dispatch: Dispatch<CartAction>): void => {\r\n    dispatch({\r\n      type: CartActionTypes.UPDATE_CART_ITEM,\r\n      product\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateCartItemQuantity = (product: IProduct, quantity: number) => {\r\n    return (dispatch: Dispatch<CartAction>): void => {\r\n      dispatch({\r\n        type: CartActionTypes.UPDATE_CART_ITEM_QUANTITY,\r\n        product,\r\n        quantity\r\n      });\r\n    };\r\n};\r\n\r\nexport const clearCartItem = (product: IProduct) => {\r\n    return (dispatch: Dispatch<CartAction>): void => {\r\n      dispatch({\r\n        type: CartActionTypes.CLEAR_CART_ITEM,\r\n        product\r\n      });\r\n    };\r\n};\r\n\r\nexport const setCleanLocalStorageCart = () => {\r\n  return (dispatch: Dispatch<CartAction>): void => {\r\n    dispatch({\r\n      type: CartActionTypes.CLEAN_LOCAL_STORAGE_CART,\r\n    });\r\n  };\r\n};\r\n\r\nexport const placeAnOrder = (order: IOrder) => {\r\n  return (dispatch: Dispatch<CartAction>): void => {\r\n    dispatch({\r\n      type: CartActionTypes.PLACE_AN_ORDER,\r\n      order\r\n    });\r\n  };\r\n};","import { Dispatch } from \"redux\";\r\nimport { NewFileActionTypes, SetNewFileAction } from \"../reducers/type/newFile\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const setNewFile = (file: File | string) => {\r\n  return (dispatch: Dispatch<SetNewFileAction>): void => {\r\n    dispatch({ type: NewFileActionTypes.SET_NEW_FILE, payload: file });\r\n  };\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { OrdersAction, OrdersActionTypes } from \"../reducers/type/order\";\r\nimport { getOrders } from \"../../API/ordersAPI\";\r\n\r\nexport const fetchOrders = () => {\r\n  return async (dispatch: Dispatch<OrdersAction>): Promise<void> => {\r\n    try {\r\n      dispatch({ type: OrdersActionTypes.FETCH_ORDERS });\r\n      const response = await getOrders();\r\n      dispatch({\r\n        type: OrdersActionTypes.FETCH_ORDERS_SUCCESS,\r\n        payload: response,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: OrdersActionTypes.FETCH_ORDERS_ERROR,\r\n        payload: \"An error occurred while loading data.\",\r\n      });\r\n    }\r\n  };\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { ManagersAction, ManagersActionTypes } from \"../reducers/type/manager\";\r\nimport { getAllManagers } from \"../../API/managerAPI\";\r\n\r\nexport const fetchManagers = () => {\r\n  return async (dispatch: Dispatch<ManagersAction>): Promise<void> => {\r\n    try {\r\n      dispatch({ type: ManagersActionTypes.FETCH_MANAGERS });\r\n      const response = await getAllManagers();\r\n      dispatch({\r\n        type: ManagersActionTypes.FETCH_MANAGERS_SUCCESS,\r\n        payload: response,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ManagersActionTypes.FETCH_MANAGERS_ERROR,\r\n        payload: \"An error occurred while loading data.\",\r\n      });\r\n    }\r\n  };\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { UsersAction, UsersActionTypes } from \"../reducers/type/users\";\r\nimport { getUnverifiedUsers } from \"../../API/userAPI\";\r\n\r\nexport const fetchUsers = () => {\r\n  return async (dispatch: Dispatch<UsersAction>): Promise<void> => {\r\n    try {\r\n      dispatch({ type: UsersActionTypes.FETCH_USERS });\r\n      const response = await getUnverifiedUsers();\r\n      dispatch({\r\n        type: UsersActionTypes.FETCH_USERS_SUCCESS,\r\n        payload: response,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: UsersActionTypes.FETCH_USERS_ERROR,\r\n        payload: \"An error occurred while loading data.\",\r\n      });\r\n    }\r\n  };\r\n};\r\n","import * as GoodsActionCreators from \"./goods\";\r\nimport * as AuthsActionCreators from \"./auth\";\r\nimport * as NavbarActionCreators from \"./navbar\";\r\nimport * as CartActionCreators from \"./cart\";\r\nimport * as NewFileActionCreators from \"./newFile\";\r\nimport * as OrdersActionCreators from \"./orders\";\r\nimport * as ManagersActionCreators from \"./managers\";\r\nimport * as UsersActionCreators from \"./users\";\r\n\r\nexport default {\r\n  ...GoodsActionCreators,\r\n  ...AuthsActionCreators,\r\n  ...NavbarActionCreators,\r\n  ...CartActionCreators,\r\n  ...NewFileActionCreators,\r\n  ...OrdersActionCreators,\r\n  ...ManagersActionCreators,\r\n  ...UsersActionCreators,\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ActionsCreators from \"../action-creators/\";\r\n\r\nexport const useActions = (): typeof ActionsCreators => {\r\n  const dispatch = useDispatch();\r\n  return bindActionCreators(ActionsCreators, dispatch);\r\n};\r\n","import { $authHost, $host } from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { IUser } from \"../globalTypes\";\r\n\r\ntype Itoken = {\r\n  id: number;\r\n  telephone_number: string;\r\n  role: string;\r\n  verification: boolean;\r\n  telegram_user_id: string;\r\n  iat: number;\r\n  exp: number;\r\n};\r\n\r\nexport const registration = async (formData: unknown): Promise<unknown> => {\r\n  try {\r\n    const { data } = await $host.post(\"api/user/registration\", formData);\r\n    if (data.token) {\r\n      sessionStorage.setItem(\"token\", data.token);\r\n      sessionStorage.setItem(\"userTgID\", data.userTgID);\r\n      const res: Itoken = jwt_decode(data.token);\r\n      sessionStorage.setItem(\"isVerified\", JSON.stringify(res.verification));\r\n      return res;\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const login = async (\r\n  phone: string,\r\n  password: string\r\n): Promise<unknown> => {\r\n  const { data } = await $host.post(\"api/user/login\", {\r\n    telephone_number: phone,\r\n    password: password,\r\n  });\r\n  const res = { error: false, data };\r\n\r\n  if (data.token) {\r\n    sessionStorage.setItem(\"token\", data.token);\r\n    sessionStorage.setItem(\"userTgID\", data.userTgID);\r\n    const tempRes: Itoken = jwt_decode(data.token);\r\n    sessionStorage.setItem(\"isVerified\", JSON.stringify(tempRes.verification));\r\n    return tempRes.verification ? tempRes : res;\r\n  } else {\r\n    res.error = true;\r\n    return res;\r\n  }\r\n};\r\n\r\nexport const check = async (): Promise<unknown> => {\r\n  const { data } = await $authHost.get(\"api/user/auth\");\r\n  sessionStorage.setItem(\"token\", data.token);\r\n  const res: Itoken = jwt_decode(data.token);\r\n  sessionStorage.setItem(\"isVerified\", JSON.stringify(res.verification));\r\n  sessionStorage.setItem(\"userTgID\", res.telegram_user_id);\r\n  return res;\r\n};\r\n\r\nexport const checkLogin = async (phoneNumber: string): Promise<unknown> => {\r\n  try {\r\n    const { data } = await $host.post(\"api/user/cheak_login\", {\r\n      telephone_number: phoneNumber,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const verificateUser = async (id: number): Promise<unknown> => {\r\n  try {\r\n    const { data } = await $authHost.post(`api/user/${id}/verificate`);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteUser = async (id: number): Promise<unknown> => {\r\n  try {\r\n    const { data } = await $authHost.delete(`api/user/${id}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getUnverifiedUsers = async (): Promise<IUser[]> => {\r\n  let res: IUser[] = [];\r\n  await $authHost.get(`api/user/unverified`).then((resp) => {\r\n    if (resp.data.status) {\r\n      return res;\r\n    }\r\n    res = resp.data;\r\n  });\r\n  return res;\r\n};\r\n","import { $authHost } from \"./index\";\r\nimport { IOrder, IOrders } from \"../globalTypes\";\r\n\r\nexport const getOrders = async (): Promise<IOrders[]> => {\r\n  let res: IOrders[] = [];\r\n  await $authHost.get(`api/order/all`).then((resp) => {\r\n    if (resp.data.status) {\r\n      return res;\r\n    }\r\n    res = resp.data;\r\n  });\r\n  return res;\r\n};\r\n\r\nexport const placeOrder = async (order: IOrder): Promise<unknown> => {\r\n  const { data } = await $authHost.post(`api/order/create`, order);\r\n  return data;\r\n};\r\nexport const deleteOrder = async (id: number): Promise<unknown> => {\r\n  const { data } = await $authHost.delete(`api/order/${id}`);\r\n  return data;\r\n};\r\n","export interface NewFileState {\r\n  file: File | string;\r\n}\r\n\r\nexport interface SetNewFileAction {\r\n  type: NewFileActionTypes;\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  payload?: any;\r\n}\r\n\r\nexport enum NewFileActionTypes {\r\n  SET_NEW_FILE = \"SET_NEW_FILE\",\r\n}\r\n\r\nexport type NewFileActions = NewFileActionTypes;\r\n","import React from \"react\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport \"./Style.scss\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nexport default class LoaderElement extends React.Component {\r\n  render(): JSX.Element {\r\n    return (\r\n      <div className=\"loader\">\r\n        <h1 className=\"loader-title\">Loading...</h1>\r\n        <Loader type=\"Watch\" color=\"white\" height={180} width={180} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}